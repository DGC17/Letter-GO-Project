/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package wrappers;

public class classifierJNI {
  public final static native long new_Pair__SWIG_0();
  public final static native long new_Pair__SWIG_1(String jarg1, float jarg2);
  public final static native long new_Pair__SWIG_2(long jarg1, Pair jarg1_);
  public final static native void Pair_first_set(long jarg1, Pair jarg1_, String jarg2);
  public final static native String Pair_first_get(long jarg1, Pair jarg1_);
  public final static native void Pair_second_set(long jarg1, Pair jarg1_, float jarg2);
  public final static native float Pair_second_get(long jarg1, Pair jarg1_);
  public final static native void delete_Pair(long jarg1);
  public final static native long new_PairVector__SWIG_0();
  public final static native long new_PairVector__SWIG_1(long jarg1);
  public final static native long PairVector_size(long jarg1, PairVector jarg1_);
  public final static native long PairVector_capacity(long jarg1, PairVector jarg1_);
  public final static native void PairVector_reserve(long jarg1, PairVector jarg1_, long jarg2);
  public final static native boolean PairVector_isEmpty(long jarg1, PairVector jarg1_);
  public final static native void PairVector_clear(long jarg1, PairVector jarg1_);
  public final static native void PairVector_add(long jarg1, PairVector jarg1_, long jarg2, Pair jarg2_);
  public final static native long PairVector_get(long jarg1, PairVector jarg1_, int jarg2);
  public final static native void PairVector_set(long jarg1, PairVector jarg1_, int jarg2, long jarg3, Pair jarg3_);
  public final static native void delete_PairVector(long jarg1);
  public final static native long new_PairPrediction__SWIG_0();
  public final static native long new_PairPrediction__SWIG_1(long jarg1, PairVector jarg1_, long jarg2, PairVector jarg2_);
  public final static native long new_PairPrediction__SWIG_2(long jarg1, PairPrediction jarg1_);
  public final static native void PairPrediction_first_set(long jarg1, PairPrediction jarg1_, long jarg2, PairVector jarg2_);
  public final static native long PairPrediction_first_get(long jarg1, PairPrediction jarg1_);
  public final static native void PairPrediction_second_set(long jarg1, PairPrediction jarg1_, long jarg2, PairVector jarg2_);
  public final static native long PairPrediction_second_get(long jarg1, PairPrediction jarg1_);
  public final static native void delete_PairPrediction(long jarg1);

        static {
                try {
                        System.loadLibrary("caffe");
                        System.loadLibrary("classifier_jni");
                } catch (UnsatisfiedLinkError e) {
                        System.err.println("Native code library failed to load. \n" + e);
                        System.exit(1);
                }
        }
     
  public final static native void Classifier_loadModel(long jarg1, Classifier jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, int NUM_THREADS);
  public final static native void Classifier_unloadModel(long jarg1, Classifier jarg1_);
  public final static native long Classifier_classify(long jarg1, Classifier jarg1_, byte[] jarg2, int jarg3, int jarg4, int jarg5);
    public final static native long Classifier_predictImageSlidingWindow(long jarg1, Classifier jarg1_, byte[] jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9 , int jarg10 , int jarg11 , double jarg12);

    public final static native long new_Classifier();
  public final static native void delete_Classifier(long jarg1);
}
